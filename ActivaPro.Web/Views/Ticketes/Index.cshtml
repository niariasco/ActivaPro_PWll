@model IEnumerable<ActivaPro.Application.DTOs.TicketesDTO>

@{
    ViewData["Title"] = "Tickets";
    var idUsuario = ViewBag.IdUsuario ?? 1;
    var rolUsuario = ViewBag.RolUsuario ?? "Administrador";
}

<h1 class="mb-4">Gestión de Tickets</h1>

<!-- Información del Usuario Actual (NO EDITABLE EN LA INTERFAZ) -->
<div class="alert alert-info mb-3">
    <strong>Usuario Actual:</strong> ID: @idUsuario | <strong>Rol:</strong> @rolUsuario
    <br />
    <small class="text-muted">
        @if (rolUsuario == "Administrador")
        {
            <span> Visualizando <strong>TODOS</strong> los tickets del sistema</span>
        }
        else if (rolUsuario == "Técnico")
        {
            <span> Visualizando tickets <strong>ASIGNADOS</strong> a ti</span>
        }
        else if (rolUsuario == "Cliente")
        {
            <span> Visualizando tickets <strong>CREADOS</strong> por ti</span>
        }
    </small>
</div>

<!-- Selector de Usuario (SOLO PARA PRUEBAS - Remover en producción) -->
<div class="card bg-warning bg-opacity-10 border-warning mb-3">
    <div class="card-body">
        <h6 class="card-title"> Panel de Pruebas (Remover en producción)</h6>
        <form method="get" asp-action="Index" class="row g-2">
            <div class="col-md-3">
                <label class="form-label small">ID Usuario:</label>
                <input type="number" name="testUserId" class="form-control" value="@idUsuario" min="1" />
            </div>
            <div class="col-md-4">
                <label class="form-label small">Rol:</label>
                <select name="testUserRole" class="form-select">
                    <option value="Administrador" selected="@(rolUsuario == "Administrador")">Administrador </option>
                    <option value="Técnico" selected="@(rolUsuario == "Técnico")"> Técnico</option>
                    <option value="Cliente" selected="@(rolUsuario == "Cliente")"> Cliente</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-warning w-100">Cambiar Vista</button>
            </div>
        </form>
    </div>
</div>

<p>
    <a class="btn btn-primary mb-3" asp-action="Create">
        <i class="bi bi-plus-circle me-2"></i>Crear Nuevo Ticket
    </a>
</p>

<!-- Filtros -->
<div class="card mb-3">
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-5">
                <input type="text" id="searchInput" class="form-control" placeholder="Buscar por título o ID...">
            </div>
            <div class="col-md-3">
                <select id="filterEstado" class="form-select">
                    <option value="">Todos los estados</option>
                    <option value="Pendiente">Pendiente</option>
                    <option value="En Proceso">En Proceso</option>
                    <option value="Cerrado">Cerrado</option>
                </select>
            </div>
            <div class="col-md-2">
                <button id="clearFilters" class="btn btn-outline-secondary w-100">Limpiar</button>
            </div>
        </div>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <div class="alert alert-success">
        <strong>Total de tickets visibles:</strong> @Model.Count()
    </div>

    <table class="table table-striped table-bordered" id="ticketsTable">
        <thead class="table-primary">
            <tr>
                <th>ID</th>
                <th>Título</th>
                <th>Estado</th>
                <th>Categoría</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="fw-bold text-primary">#@item.IdTicket</td>
                    <td>
                        <div>
                            <strong>@item.Titulo</strong>
                            <br />
                            <small class="text-muted">
                                Solicitante: @(item.NombreSolicitante ?? "Desconocido") |
                                Asignado: @(item.NombreAsignado ?? "Sin asignar")
                            </small>
                        </div>
                    </td>
                    <td>
                        @if (item.Estado == "Pendiente")
                        {
                            <span class="badge bg-warning text-dark"> Pendiente</span>
                        }
                        else if (item.Estado == "En Proceso")
                        {
                            <span class="badge bg-info"> En Proceso</span>
                        }
                        else if (item.Estado == "Cerrado")
                        {
                            <span class="badge bg-success"> Cerrado</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">@item.Estado</span>
                        }
                    </td>
                    <td>
                        <span class="badge bg-light text-dark">
                            @(item.CategoriaNombre ?? "Sin categoría")
                        </span>
                        @if (!string.IsNullOrEmpty(item.SLA_Prioridad))
                        {
                            @if (item.SLA_Prioridad.Contains("Alta"))
                            {
                                <span class="badge bg-danger ms-1"> Alta</span>
                            }
                            else if (item.SLA_Prioridad.Contains("Media"))
                            {
                                <span class="badge bg-warning text-dark ms-1">🟡 Media</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary ms-1"> Baja</span>
                            }
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Ver Detalle", "Details", new { id = item.IdTicket }, new { @class = "btn btn-info btn-sm me-1" })
                        @Html.ActionLink("Editar", "Edit", new { id = item.IdTicket }, new { @class = "btn btn-warning btn-sm me-1" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.IdTicket }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning text-center py-5">
        <i class="bi bi-inbox fs-1"></i>
        <h4 class="mt-3">No hay tickets disponibles</h4>
        <p class="text-muted">
            @if (rolUsuario == "Administrador")
            {
                <span>No hay tickets registrados en el sistema.</span>
            }
            else if (rolUsuario == "Técnico")
            {
                <span>No tienes tickets asignados actualmente.</span>
            }
            else if (rolUsuario == "Cliente")
            {
                <span>No has creado ningún ticket aún.</span>
            }
        </p>
        <a asp-action="Create" class="btn btn-primary mt-2">
            <i class="bi bi-plus-circle me-2"></i>Crear tu primer ticket
        </a>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const filterEstado = document.getElementById('filterEstado');
            const clearFilters = document.getElementById('clearFilters');
            const table = document.getElementById('ticketsTable');

            if (table) {
                const rows = table.querySelectorAll('tbody tr');

                function filterTable() {
                    const searchTerm = searchInput.value.toLowerCase();
                    const selectedEstado = filterEstado.value.toLowerCase();

                    rows.forEach(row => {
                        const id = row.cells[0].textContent.toLowerCase();
                        const titulo = row.cells[1].textContent.toLowerCase();
                        const estado = row.cells[2].textContent.toLowerCase();

                        const matchesSearch = id.includes(searchTerm) || titulo.includes(searchTerm);
                        const matchesEstado = !selectedEstado || estado.includes(selectedEstado);

                        if (matchesSearch && matchesEstado) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    });
                }

                searchInput.addEventListener('input', filterTable);
                filterEstado.addEventListener('change', filterTable);

                clearFilters.addEventListener('click', function() {
                    searchInput.value = '';
                    filterEstado.value = '';
                    filterTable();
                });
            }
        });
    </script>
}